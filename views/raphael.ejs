<html>
	<head>
		<meta charset='utf-8'>
		<meta name="description" content="Gala: Learn how to program by commanding a robot army in space!">
		<meta name="author" content="Kevin Hwang & Ajay Tripathy">
		<title>RAPHAEL TEST</title>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
		<link href="http://twitter.github.com/bootstrap/assets/css/bootstrap.css" rel="stylesheet">
		<link href="http://twitter.github.com/bootstrap/assets/css/bootstrap-responsive.css" rel="stylesheet">
		<link href="/static/raphael.css" rel="stylesheet">

		<!--HTML5 shim, for IE6-8 support of HTML5 elements. Does it actually work? No clue, but here's to hoping it does!-->

		<!--[if lt IE 9]>
			<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
		<![endif]-->

		<script src="/static/raphael-min.js"></script>
		<script>
			var board = null;

			var maxX = 9;
			var maxY = 9;

			var t = null;
			var paper = null;

			$(document).ready(function () {
				console.log("ready and waiting");


				board = new Array(maxX+1);

				for (var i = 0; i <= maxX; i++) {
					board[i] = new Array(maxX+1);
				}

				for (var i = 0; i <= maxX; i++) {
					for (var j = 0; j <= maxY; j++) {
						board[i][j] = null;
					}
				}
				initializeBoard();
			});
		</script>


		<script>
			//raphael's grid system goes: x: 0 -> 9 and y: 9 -> 0 (i.e. y increases from top to bottom)
			//todo: fix it :3

			var t = null;

			var allShips = [];


			var initializeBoard = function () {
				paper = Raphael("gameBoardDiv",500,500);
				for (var i = 0; i <= maxX; i++) {
					for (var j = 0; j <= maxY; j++) {
						var rect = paper.rect(i*50,j*50,50,50);
						rect.attr({fill: "green"});
						rect.node.id="cell"+i+","+j
					}
				}
			}

			var loadOpeningBoard = function () {
				$.post("/getBoardState", function (data) {
					drawFirstBoard(data);
					t = setTimeout(drawNextTick,10000);
				});
			}

			var drawFirstBoard = function (newBoard) {
				for (var i = 0; i <= maxX; i++) {
					for (var j = 0; j <= maxY; j++) {
						var boardObj = newBoard[i][j];
						if (boardObj.type == "Space") {
							//do nothing
						} else if (boardObj.type == "Ship") {
							var xPos = boardObj.position.x;
							var yPos = boardObj.position.y;
							var newShip = paper.rect(xPos*50,yPos*50,50,50);
							console.log("SHIP!!!");
							console.log(boardObj);
							newShip.node.id = "ship"+boardObj.shipId;
							$(newShip.node).attr("class",boardObj.playerId)
							//newShip.node.class = boardObj.playerId;
							newShip.attr({fill:"red"});
						} else {
							alert('wat');
						}
					}
				}
			}

			var loadMovements = function (newBoard) {
				for (var i = 0; i <= maxX; i++) {
					for (var j = 0; j <= maxY; j++) {
						var boardObj = newBoard[i][j];
						if (boardObj.type == "Space") {
							//do nothing
						} else if (boardObj.type == "Ship") {
							allShips.push(boardObj);
						} else {
							alert('wat');
						}
					}
				}
			}

			var drawNextTick = function () {
				$.post("/getBoardState", function (data) {
					loadMovements(data);
					t = setTimeout(drawNextTick,10000);
				});
			}

			var updateMovements = function (board) {
				console.log("updating movements");
				while (allShips.length != 0) {
					var ship = allShips.shift();
					var oldX = ship.lastPosition.x;
					var oldY = ship.lastPosition.y;
					var newX = ship.position.x;
					var newY = ship.position.y;
					
				}
			}

			/*
			var loadBoard = function () {
				console.log("loading board...");
				$.post("/getBoardState", function (data) {
					console.log("got board state. time to draw!");
					drawBoard(data)
				})
				t = setTimeout(loadBoard,5000);
			}

			setTimeout(loadBoard,5000);

			//NOTE: currently the board is increasing in x to the right and increasing in y down.
			//this is the opposite of how the board is represented in server.js
			//will fix this one day.

			var initializeBoard = function () {

				console.log("initializing board...");
				for (var j = maxY; j >= 0; j--) {
					var toAdd = "<tr>";
					for (var i = 0; i <= maxX; i++) {
						toAdd += "<td id='cell"+i+","+j+"'>hi</td>"
					}
					//console.log("row to add: "+toAdd);
					$("#gameBoard").find("tbody").append(toAdd)
				}
			}

			var drawBoard = function (newBoard) {
				//updates the board! 
				console.log("drawing new board");
				console.log(newBoard);
				for (var i = 0; i <= maxX; i++) {
					for (var j = 0; j <= maxY; j++) {
						var cell = document.getElementById("cell"+i+","+j)
						var boardObj = newBoard[i][j];
						if (boardObj.type == "Space") {
							cell.innerText = "SPACE";
						} else if (boardObj.type == "Ship") {
							cell.innerText = "SHIP";
						} else {
							alert('wat');
						}
					}
				}

			}
			*/
		</script>
	</head>

	<body>
		<div class="navbar navbar-fixed-top">
			<div class="navbar-inner">
				<div class="container">
					<a class="brand" href="#">Gala</a>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="hero">
				<h1>RAPHAEL!!!</h1>
			</div>
			<div class="container">


				<div class="row">
					<div class="span12">
						<p>Do a loop: ask for the board state and then display it.</p>
						<button onclick="loadOpeningBoard()">LOAD FIRST BOARD</button>
					</div>
				</div>

				<div class="row">
					<div class="span12" id="gameBoardDiv">
					</div>
				</div>

				<hr>
				<footer>
					<p>&copy; Ajay Tripathy & Kevin Hwang 2012</p>
				</footer>
			</div>
		</div>
		



	</body>
</html>